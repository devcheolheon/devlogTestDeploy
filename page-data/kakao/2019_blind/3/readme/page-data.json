{"componentChunkName":"component---src-templates-blog-post-js","path":"/kakao/2019_blind/3/readme/","result":{"data":{"site":{"siteMetadata":{"title":"DEV LOGS"}},"markdownRemark":{"id":"168ed997-9477-506b-87df-75d7dce49e44","excerpt":"후보키 아이디어 후보키의 가능한 조합을 조합 배열을 미리 만들어서 길이 순서대로 뽑아 놓고 하나하나 확인해본다. 후보키를 컬럼의 인덱스의 배열로 표현하는데 컬럼수에 따라 순서 상관없이 모든 조합의 종류를 놓고 만듬\n(예 : 0,1,2 … 0번째 1번째…","html":"<h2>후보키</h2>\n<h3>아이디어</h3>\n<ul>\n<li>후보키의 가능한 조합을 조합 배열을 미리 만들어서 길이 순서대로 뽑아 놓고 하나하나 확인해본다.</li>\n<li>후보키를 컬럼의 인덱스의 배열로 표현하는데 컬럼수에 따라 순서 상관없이 모든 조합의 종류를 놓고 만듬\n(예 : [0,1,2] … 0번째 1번째 2번째 컬럼으로 만든 후보키 )</li>\n<li>후보키의 유일성 확인은\n모든 릴레이션에서 해당 후보키 조합으로 키를 만들어보고 키가 중복되면 실패하도록 함,\n키는 해당 릴레이션에 후보키 조합을 문자열로 조합해서 만들었고 객체를 딕셔너리처럼 활용해서 해결</li>\n<li>후보키의 최소성 확인은,\n유일성확인이 된 키들을 결과 배열에 넣어놓고, 결과 배열의 값을 부분집합으로 가지고 있는지 확인해서 체크 함</li>\n</ul>\n<h3>문제점</h3>\n<ul>\n<li>검사하려고 하는 후보키가 결과 집합 내에 부분집합을 가지고 있는지 검사하는 부분이 헷갈림\n( 결과 집합내 후보키들 중 어떤 후보키의 모든 키 값이 검사하려는 후보키에 include 되어 있을때)</li>\n<li>모든 조합, 모든 순열 후보를 만들어 내는 연습이 필요함</li>\n</ul>","frontmatter":{"title":"","date":null,"description":null}}},"pageContext":{"slug":"/kakao/2019_blind/3/readme/","previous":{"fields":{"slug":"/kakao/2019_blind/4/readme/"},"frontmatter":{"title":""}},"next":{"fields":{"slug":"/kakao/2019_blind/5/readme/"},"frontmatter":{"title":""}}}}}