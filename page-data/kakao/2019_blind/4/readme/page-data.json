{"componentChunkName":"component---src-templates-blog-post-js","path":"/kakao/2019_blind/4/readme/","result":{"data":{"site":{"siteMetadata":{"title":"DEV LOGS"}},"markdownRemark":{"id":"d932c2bb-fded-5b5b-914c-36d68e4d064f","excerpt":"먹방 시뮬레이션 아이디어 각 음식의 양의 배열에서 음식의 양 별로 카운트 한 다음, 각 카운트를 음식의 양이 큰 값부터 누산해 주면\ni 번째 회전에 흐르는 시간을 쉽게 계산해 낼수 있음 아무래도 해설에 설명이 더 쉬움 문제점 경계값들로 인한 시행착오들 i번째 카운터에서 k가…","html":"<h2>먹방 시뮬레이션</h2>\n<h3>아이디어</h3>\n<ul>\n<li>각 음식의 양의 배열에서 음식의 양 별로 카운트 한 다음, 각 카운트를 음식의 양이 큰 값부터 누산해 주면\ni 번째 회전에 흐르는 시간을 쉽게 계산해 낼수 있음</li>\n<li>아무래도 해설에 설명이 더 쉬움</li>\n</ul>\n<h3>문제점</h3>\n<ul>\n<li>\n<p>경계값들로 인한 시행착오들</p>\n<ul>\n<li>i번째 카운터에서 k가 0으로 딱 떨어진다면 ?? 다음 카운터까지 가주고, 다음 카운터에 해당하는 첫 값이 첫 음식인데,\n이 부분을 차분하게 생각하지 못함.</li>\n<li>카운터가 1부터 시작하지 않는 경우, 음식의 총량이 1인 음식이 없는 경우 제대로 셈하지 않아 오류 발생</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"","date":null,"description":null}}},"pageContext":{"slug":"/kakao/2019_blind/4/readme/","previous":{"fields":{"slug":"/kakao/2019_blind/6/readme/"},"frontmatter":{"title":""}},"next":{"fields":{"slug":"/kakao/2019_blind/3/readme/"},"frontmatter":{"title":""}}}}}