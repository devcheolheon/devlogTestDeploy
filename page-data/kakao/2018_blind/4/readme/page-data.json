{"componentChunkName":"component---src-templates-blog-post-js","path":"/kakao/2018_blind/4/readme/","result":{"data":{"site":{"siteMetadata":{"title":"DEV LOGS"}},"markdownRemark":{"id":"5d6f4c8e-c2e6-5145-8b4a-a551c335c014","excerpt":"…","html":"<h2>셔틀버스 타기</h2>\n<h3>아이디어</h3>\n<ul>\n<li>\n<p>모든 배차의 차를 고려할 필요가 없고, 마지막 차만 잘 생각하면 된다.</p>\n<ul>\n<li>가장 늦게 갈 계획이므로</li>\n</ul>\n</li>\n<li>\n<p>마지막 버스가 꽉찬다면, 그 꽉채운 마지막사람보다 일분만 일찍오면 된다.</p>\n<ul>\n<li>무슨 버스를 탈지는 물어보지 않았고, 버스를 탈 수 있기만 하면 된다. 딱 이정도 조건이면 버스를 탈 수 있는 것은 확실하다.</li>\n</ul>\n</li>\n<li>마지막 버스가 꽉차지 않는다면 그 버스 시간에 오면 된다.</li>\n</ul>\n<h3>문제점</h3>\n<ul>\n<li>\n<p>기존에 내가 시도하던 알고리즘은</p>\n<ul>\n<li>버스 시간표에 맞춰서 모든 버스를 고려하는데\n만약 버스에 사람을 다 태울 경우</li>\n<li>\n<p>버스에 마지막으로부터 두번째 탄 사람부터\n그 다음 사람과 시간이 같지 않는 시점을 찾는데..</p>\n<p>…</p>\n</li>\n</ul>\n<p>뭐 어떻게든 구현했는데 아무리 고쳐도 통과하지 못하는 테스트 케이스가 있어서\n하다가 버려버리게 되었다.</p>\n</li>\n<li>잘 생각하면 조건을 간단하게 만들 수 있다.\n(물론 남의 코드를 보고 알긴 했지만.. )</li>\n</ul>","frontmatter":{"title":"","date":null,"description":null}}},"pageContext":{"slug":"/kakao/2018_blind/4/readme/","previous":{"fields":{"slug":"/kakao/2018_blind/5/readme/"},"frontmatter":{"title":""}},"next":{"fields":{"slug":"/kakao/2018_blind/2/readme/"},"frontmatter":{"title":""}}}}}