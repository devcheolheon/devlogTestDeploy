{"componentChunkName":"component---src-templates-blog-post-js","path":"/samsung/1953/README/","result":{"data":{"site":{"siteMetadata":{"title":"DEV LOGS"}},"markdownRemark":{"id":"eb644401-253d-50e4-bfc6-a962cd61bea5","excerpt":"터널 시뮬레이션 문제 아이디어 구조물 구조가 다양하고 그에 따라 이동할 수 있는 위치가 제한된다. \n이 때 구조물을 자료구조로 잘 표현하면 이동할때 조건문을 줄일 수 있다. 위 0 오른쪽 1 아래 2 왼쪽 3 이 방향으로 해서 각 구조물을 표현해 보면\n사방으로 갈 수 있는…","html":"<h2>터널 시뮬레이션 문제</h2>\n<h3>아이디어</h3>\n<ul>\n<li>\n<p>구조물 구조가 다양하고 그에 따라 이동할 수 있는 위치가 제한된다.\n이 때 구조물을 자료구조로 잘 표현하면 이동할때 조건문을 줄일 수 있다.</p>\n<p>위 0 오른쪽 1 아래 2 왼쪽 3 이 방향으로 해서 각 구조물을 표현해 보면\n사방으로 갈 수 있는 1번 같은 경우는 [true, true, true, true] 로\n각 구조물을 연결 가능한 위치에 인덱스 값을 true로 하는 배열을 표현한다. </p>\n<p>각 구조물을 연결하기 위해서는\n현재 구조물의 그 방향의 연결 가능 여부와 대상 구조물(건너갈)의 그 방향에서 연결가능 여부를 체크한다.\n이때 현재 구조물은 해당 방향의 인덱스 값을 확인하면 되고\n대상 구조믈은 해당 방향의 인덱스 값으로 ( index + 2 ) % 4 하면 된다. </p>\n<p>만약 오른쪽으로 간다면 -> 1  은 대상 구조물의 왼쪽 &#x3C;- ((1+2) % 4) = 3 과 연결된다. </p>\n<p>구조물을 boolean의 배열로서 각 방향과 인덱스를 잘 연관한 자료구조로 표현하는 것이 아이디어였다. </p>\n<p>복잡한 문제는 아니었고, 이 문제는 자잘한 실수와의 싸움.. 집중력 문제였다.\n그렇다고 하기엔, 멍청한 실수를 해결하는데 너무 시간이 걸리고 말았다. </p>\n</li>\n</ul>\n<h3>문제점</h3>\n<ul>\n<li>\n<p>실수 포인트 </p>\n<ul>\n<li>아래칸 위칸 움직이는 것을 구현할 때 위가 +1,0 이라고 생각했지만 (구현하기에 그렇게 될 수 있겠지만)\n지금 구현한 시뮬레이션에서 맵에서 위로 이동하기 위해선 -1, 0 이렇게 이동해야 됬던 것.\n뭔가 이상하게 작동하는데 한참을 고민하다가.. 이 문제가 있었다 시뮬레이션 문제를 풀때는 방향을 조심하자!</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"","date":null,"description":null}}},"pageContext":{"slug":"/samsung/1953/README/","previous":{"fields":{"slug":"/kakao/2020_blind/readme/"},"frontmatter":{"title":""}},"next":{"fields":{"slug":"/kakao/2019_winter_internship/readme/"},"frontmatter":{"title":""}}}}}