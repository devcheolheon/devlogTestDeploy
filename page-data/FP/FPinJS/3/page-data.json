{"componentChunkName":"component---src-templates-blog-post-js","path":"/FP/FPinJS/3/","result":{"data":{"site":{"siteMetadata":{"title":"DEV LOGS"}},"markdownRemark":{"id":"c93e7d07-6733-542c-b069-2f4bd6acba07","excerpt":"객체지향과 함수형을 혼합한 하이브리드 언어인 자바스크립트를 빠르게 둘러봅니다.\n(언어 자체로 불변성 지원 못함) 2.1 왜 자바스크립트인가? 웹 세상을 대표하는 맹주 언어 2.…","html":"<blockquote>\n<p>객체지향과 함수형을 혼합한 하이브리드 언어인 자바스크립트를 빠르게 둘러봅니다.\n(언어 자체로 불변성 지원 못함)</p>\n</blockquote>\n<h3>2.1 왜 자바스크립트인가?</h3>\n<p>웹 세상을 대표하는 맹주 언어</p>\n<h3>2.2.함수형 대 객체지향 프로그래밍</h3>\n<p>객체 지향은 데이터와 데이터 관계의 본질에 초점을 두는 한편\n함수형의 관심사는 해야 할 일, 즉 기능입니다.</p>\n<p>함수형 자바스크립트로 개발할 때에는 상태 변화 관리에 특히 신경을 써야 합니다</p>\n<h3>2.2.1 자바스크립트의 상태관리</h3>\n<p>상태란, 어느 한 시점에 찍은 모든 객체에 저장된 데이터의 스냅샷 입니다.\n안타깝게도 자바스크립트는 객체의 상태를 보호하는 측면에서 최악의 언어중 하나입니다</p>\n<p>데이터를 완전히 캡슐화하고 보호하는 건 여러분 스스로 훈련을 통해 엄격히 지켜야 할 목표입니다.\n( 자바스크립트에서는 객체의 상태를 보호하는 측면에서는 최악의 언어 ) </p>\n<p>이를 위한 방법들 </p>\n<h3>가동부를 깊이 동결</h3>\n<ul>\n<li>\n<p>object.freeze() 함수를 사용 </p>\n<ul>\n<li>내부 객체 속성까지는 동결하지 않는다.(shallow freeze)<br>\n객체의 중첩 구조를 일일이 수작업으로 동결해야 합니다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">isObject</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> val <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> val <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">deepFreeze</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isObject</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">isFrozen</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">deepFreeze</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">freeze</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>렌즈(lense)함수형 레퍼런스</h3>\n<ul>\n<li>상태형 자료형의 속성에 접근하여 불변화 하는 함수형 프로그래밍 기법</li>\n<li>책에는 간단한 사용법도 소개되어 있다. </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  firstName<span class=\"token operator\">:</span> <span class=\"token string\">\"aaa\"</span><span class=\"token punctuation\">,</span>\n  address<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    zip<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      a<span class=\"token operator\">:</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span>\n      b<span class=\"token operator\">:</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> zipPath <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"zip\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> zipLens <span class=\"token operator\">=</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token function\">lens</span><span class=\"token punctuation\">(</span><span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span>zipPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token function\">assocPath</span><span class=\"token punctuation\">(</span>zipPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token function\">view</span><span class=\"token punctuation\">(</span>zipLens<span class=\"token punctuation\">,</span> person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> newPerson <span class=\"token operator\">=</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>zipLens<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token number\">444</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> newZip <span class=\"token operator\">=</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token function\">view</span><span class=\"token punctuation\">(</span>zipLens<span class=\"token punctuation\">,</span> newPerson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> originalZip <span class=\"token operator\">=</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token function\">view</span><span class=\"token punctuation\">(</span>zipLesns<span class=\"token punctuation\">,</span> person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nnewZip<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> originalZip<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>클로저</h3>\n<ul>\n<li>함수를 선언할 당시의 환경을 함수에 묶어둔 자료구조</li>\n<li>함수 선언부의 물리적 위치에 의존하므로 정적스코프 (static scope)<br>\n혹은 어휘 스코프(lexical scope) 라고도 합니다.</li>\n<li>이벤트 처리 및 콜백, 프라이빗 변수 모방, 일부 자바스크립트의 약점을 보완하는 용도로도 유익합니다</li>\n</ul>","frontmatter":{"title":"CHAPTER 2 - 고계 자바스크립트","date":null,"description":null}}},"pageContext":{"slug":"/FP/FPinJS/3/","previous":{"fields":{"slug":"/FP/FPinJS/2/"},"frontmatter":{"title":"CHAPTER 1 - 함수형 길들이기"}},"next":{"fields":{"slug":"/FP/FPinJS/4/"},"frontmatter":{"title":"CHAPTER 3 - 자료구조는 적게, 일은 더 많이"}}}}}